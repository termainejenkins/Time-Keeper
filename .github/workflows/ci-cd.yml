name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm test

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Package application
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            npm run package:win
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            npm run package:mac
          else
            npm run package:linux
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: time-keeper-${{ matrix.os }}
          path: release/

  release:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        uses: actions/github-script@v6
        with:
          script: |
            const { data: commits } = await github.rest.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: 'main',
              head: context.sha
            });
            
            const changelog = commits.commits
              .map(commit => `- ${commit.commit.message}`)
              .join('\n');
            
            return changelog;

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/**/*.exe
            release/**/*.dmg
            release/**/*.AppImage
          body: ${{ steps.changelog.outputs.result }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 